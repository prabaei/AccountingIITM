@using System.Globalization
@model Accounting.Models.Recoup.RecoupMdl
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
<script src="~/scripts/Account/AccountCommon.js"></script>
<style>
    #feedback {
        font-size: 1.4em;
    }

    #selectable .ui-selecting {
        background: #FECA40;
    }

    .ui-selected {
        background: #F39814;
        color: white;
    }

    #selectable {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 60%;
    }

        #selectable li {
            margin: 3px;
            padding: 0.4em;
            font-size: 1.4em;
            height: 18px;
        }
</style>
@using (Html.BeginForm("Index", "Recoup", FormMethod.Post, new { }))
{
    <div class="row">
        @Html.HiddenFor(m => m.AccountNO, new { @id = "idAccountNO" })
        <div class="form-group  col-sm-12 col-md-6 col-lg-6">
            @Html.Label("Coordinator Name")
            <div class="input-group" style="max-width: 280px;">
                @*<input id="idInstid" oninput="enterinst()" type="text" placeholder="Institute Id" class="form-control" style="max-width:280px" />*@
                @Html.TextBoxFor(m => m.CName, new { id = "coordname", @class = "form-control", @oninput = "coordNameinp()" })
                <span class="input-group-addon" aria-hidden="true" id="basic-addon2"><i id="coordnameicon" class="glyphicon glyphicon-search"></i><img id="coordnameimg" src="~/Content/Images/loading.gif" width="20" style="display:none" /></span>
            </div>
            <label id="erName" style="color:red"></label>
        </div>
    </div>
    <button type="submit">Submit</button>

}
@using (Html.BeginForm("SubmitRecup", "Recoup", FormMethod.Post, new {id="subRecup" }))
{
    <input type="hidden" value="" id="ToJson" name="ToJson"/>
}
@if (Model.transactionList != null)
{
    <table class="table">
        <tr>
            <td>Project NO</td>
            <td>Amount</td>
            <td>Date</td>
            <td>Voucher Type</td>
            <td hidden>TransNO</td>
            
        </tr>
        <tbody id="Grid">
            @foreach (var rec in Model.transactionList)
            {
                <tr>
                    <td>@rec.ProjectNo</td>
                    <td>@rec.Amount</td>
                    <td>@rec.bankDate</td>
                    <td>@rec.voucherTypeStr</td>
                    <td hidden>@rec.TransNO</td>
                    
                </tr>
            }
        </tbody>
    </table>
}
<button type="button" onclick="convertToJson()">Ok</button>
@functions {
    string GetDateString(DateTime? dt)
    {
        DateTime temp = Convert.ToDateTime(dt);
        return temp.ToString("dd/MM/YYYY", CultureInfo.InvariantCulture);
    }
}
@*<div class="panel panel-default">
        <div class="panel-heading">Recoupment</div>
        <div class="panel-body">


        </div>
    </div>*@


<div id="msgbox" title="Message">
    <div id="commitedtran">
    </div>
</div>


<script>
    var TransactionArray = [];
    function coordNameinp() {
        ShowLoader('#coordnameimg');
        removeIcon('#coordnameicon');
        if ($('#coordname').val() == '') {
            HideLoader('#coordnameimg');
            searchIcon('#coordnameicon');
        }
    }
    $("#coordname").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: "@Url.Action("coorname", "Trans",new { area = "" })",
                type: "POST",
                dataType: "json",
                data: { coordinatorName: request.term },
                success: function (data) {
                    console.log(data);
                    HideLoader("#coordnameimg");
                    if (data.job == "s") {
                        if (data.coordName.length == 0) {
                            searchIcon("#coordnameicon");
                        } else {
                            BottomTriangleIcon("#coordnameicon");
                        }
                    }
                    response($.map(data.coordName, function (item) {
                        return { label: item.name, value: item.name, accno: item.accno, instid: item.instid };
                    }))
                }
            })
        }, select: function (event, ui) {

            $("#idAccountNO").val(ui.item.accno);
            OkIcon('#coordnameicon');

        },
    }).autocomplete("instance")._renderItem = function (ul, item) {
        return $("<li>")
          .append("<div>" + item.instid + '<br>' + item.label + "<br>" + item.accno + "</div>")
          .appendTo(ul);
    };
    function selectPro(transno) {
        console.log(transno);
    }

    function convertToJson() {
        alert("cvc");
        $("#ToJson").val(JSON.stringify(TransactionArray));
        console.log(JSON.stringify(TransactionArray));
        $("#subRecup").submit();
    }

    $(function () {


        

      
        $('#msgbox').dialog({
            autoOpen: false,
            buttons: [
                {
                    text: "Close",
                    click: function () {
                        $(this).dialog("close");
                    }
                }
            ],
            closeOnEscape: false,
            draggable: false,
            modal: true,
        });

        $("#Grid").selectable({
            filter: 'tr',
            selecting: function (event, ui) {
                console.log(ui.selecting.lastElementChild.innerText);
                TransactionArray.push(ui.selecting.lastElementChild.innerText);
                console.log(TransactionArray);
            },
            unselecting: function (event, ui) {
                console.log(ui.unselecting.lastElementChild.innerText);
                var index = TransactionArray.indexOf(ui.unselecting.lastElementChild.innerText);
                TransactionArray.splice(index, 1);
                console.log(TransactionArray);
            }
        });


    });
</script>
